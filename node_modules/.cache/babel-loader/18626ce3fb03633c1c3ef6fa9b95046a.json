{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\2023_2024\\\\IUH_HK2_2022_2023\\\\LTPTDL2\\\\dbank-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\2023_2024\\\\IUH_HK2_2022_2023\\\\LTPTDL2\\\\dbank-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\2023_2024\\\\IUH_HK2_2022_2023\\\\LTPTDL2\\\\dbank-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\2023_2024\\\\IUH_HK2_2022_2023\\\\LTPTDL2\\\\dbank-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\2023_2024\\\\IUH_HK2_2022_2023\\\\LTPTDL2\\\\dbank-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\2023_2024\\\\IUH_HK2_2022_2023\\\\LTPTDL2\\\\dbank-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport React, { Component, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Link, Navigate } from \"react-router-dom\";\nimport dBank from '../abis/dBank.json';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport Token from '../abis/Token.json';\nimport Web3 from 'web3';\n\nvar LoginForm = /*#__PURE__*/function (_Component) {\n  _inherits(LoginForm, _Component);\n\n  var _super = _createSuper(LoginForm);\n\n  function LoginForm() {\n    _classCallCheck(this, LoginForm);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      Connect();\n      retunr();\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nexport { LoginForm as default };\n\nfunction Connect() {\n  function loadBlockchainData(_x) {\n    return _loadBlockchainData.apply(this, arguments);\n  }\n\n  function _loadBlockchainData() {\n    _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var web3, netId, accounts, balance, token, dbank, dBankAddress;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(typeof window.ethereum !== 'undefined')) {\n                _context.next = 23;\n                break;\n              }\n\n              web3 = new Web3(window.ethereum);\n              _context.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context.next = 6;\n              return web3.eth.net.getId();\n\n            case 6:\n              netId = _context.sent;\n              _context.next = 9;\n              return web3.eth.getAccounts();\n\n            case 9:\n              accounts = _context.sent;\n\n              if (!(typeof accounts[0] !== 'undefined')) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 13;\n              return web3.eth.getBalance(accounts[0]);\n\n            case 13:\n              balance = _context.sent;\n              this.setState({\n                account: accounts[0],\n                balance: balance,\n                web3: web3\n              });\n              _context.next = 18;\n              break;\n\n            case 17:\n              window.alert('Please login with MetaMask');\n\n            case 18:\n              token = new web3.eth.Contract(Token.abi, Token.networks[netId].address);\n              dbank = new web3.eth.Contract(dBank.abi, dBank.networks[netId].address);\n              dBankAddress = dBank.networks[netId].address;\n              _context.next = 24;\n              break;\n\n            case 23:\n              window.alert('Please install MetaMask');\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _loadBlockchainData.apply(this, arguments);\n  }\n\n  ;\n}","map":{"version":3,"sources":["E:/2023_2024/IUH_HK2_2022_2023/LTPTDL2/dbank-master/client/src/components/Login.js"],"names":["React","Component","useState","BrowserRouter","Router","Route","Link","Navigate","dBank","Tabs","Tab","Token","Web3","LoginForm","Connect","retunr","loadBlockchainData","dispatch","window","ethereum","web3","enable","eth","net","getId","netId","getAccounts","accounts","getBalance","balance","setState","account","alert","token","Contract","abi","networks","address","dbank","dBankAddress"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,KAFJ,EAGIC,IAHJ,EAIIC,QAJJ,QAKM,kBALN;AAMA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;IACqBC,S;;;;;;;;;;;;;6BAEX;AACNC,MAAAA,OAAO;AACPC,MAAAA,MAAM;AAGP;;;;EAPoCd,S;;SAAlBY,S;;AASrB,SAASC,OAAT,GAAkB;AAAA,WACDE,kBADC;AAAA;AAAA;;AAAA;AAAA,mFAChB,iBAAkCC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK,OAAOC,MAAM,CAACC,QAAd,KAA2B,WADhC;AAAA;AAAA;AAAA;;AAEUC,cAAAA,IAFV,GAEiB,IAAIR,IAAJ,CAASM,MAAM,CAACC,QAAhB,CAFjB;AAAA;AAAA,qBAGUD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAHV;;AAAA;AAAA;AAAA,qBAIwBD,IAAI,CAACE,GAAL,CAASC,GAAT,CAAaC,KAAb,EAJxB;;AAAA;AAIUC,cAAAA,KAJV;AAAA;AAAA,qBAK2BL,IAAI,CAACE,GAAL,CAASI,WAAT,EAL3B;;AAAA;AAKUC,cAAAA,QALV;;AAAA,oBAMO,OAAOA,QAAQ,CAAC,CAAD,CAAf,KAAuB,WAN9B;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAO4BP,IAAI,CAACE,GAAL,CAASM,UAAT,CAAoBD,QAAQ,CAAC,CAAD,CAA5B,CAP5B;;AAAA;AAOYE,cAAAA,OAPZ;AAQM,mBAAKC,QAAL,CAAc;AAACC,gBAAAA,OAAO,EAAEJ,QAAQ,CAAC,CAAD,CAAlB;AAAuBE,gBAAAA,OAAO,EAAEA,OAAhC;AAAyCT,gBAAAA,IAAI,EAAEA;AAA/C,eAAd;AARN;AAAA;;AAAA;AAUMF,cAAAA,MAAM,CAACc,KAAP,CAAa,4BAAb;;AAVN;AAYYC,cAAAA,KAZZ,GAYoB,IAAIb,IAAI,CAACE,GAAL,CAASY,QAAb,CAAsBvB,KAAK,CAACwB,GAA5B,EAAiCxB,KAAK,CAACyB,QAAN,CAAeX,KAAf,EAAsBY,OAAvD,CAZpB;AAaYC,cAAAA,KAbZ,GAaoB,IAAIlB,IAAI,CAACE,GAAL,CAASY,QAAb,CAAsB1B,KAAK,CAAC2B,GAA5B,EAAiC3B,KAAK,CAAC4B,QAAN,CAAeX,KAAf,EAAsBY,OAAvD,CAbpB;AAcYE,cAAAA,YAdZ,GAc2B/B,KAAK,CAAC4B,QAAN,CAAeX,KAAf,EAAsBY,OAdjD;AAAA;AAAA;;AAAA;AAgBInB,cAAAA,MAAM,CAACc,KAAP,CAAa,yBAAb;;AAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADgB;AAAA;AAAA;;AAkBZ;AACL","sourcesContent":["import React, {Component, useState} from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link,\r\n    Navigate \r\n}from \"react-router-dom\";\r\nimport dBank from '../abis/dBank.json'\r\nimport { Tabs, Tab } from 'react-bootstrap'\r\nimport Token from '../abis/Token.json'\r\nimport Web3 from 'web3';\r\nexport default class LoginForm extends Component{\r\n\r\n  render(){\r\n    Connect();\r\n    retunr(\r\n      \r\n    )\r\n  }\r\n}\r\nfunction Connect(){\r\n  async function loadBlockchainData(dispatch) {\r\n    if(typeof window.ethereum !== 'undefined'){\r\n      const web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable();\r\n      const netId = await web3.eth.net.getId()\r\n      const accounts = await web3.eth.getAccounts()\r\n      if(typeof accounts[0] !== 'undefined'){\r\n        const balance = await web3.eth.getBalance(accounts[0])\r\n        this.setState({account: accounts[0], balance: balance, web3: web3})\r\n      } else {\r\n        window.alert('Please login with MetaMask')\r\n      }\r\n        const token = new web3.eth.Contract(Token.abi, Token.networks[netId].address)\r\n        const dbank = new web3.eth.Contract(dBank.abi, dBank.networks[netId].address)\r\n        const dBankAddress = dBank.networks[netId].address\r\n    } else {\r\n      window.alert('Please install MetaMask')\r\n    }};\r\n}"]},"metadata":{},"sourceType":"module"}