{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\acer\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\acer\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\acer\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\acer\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\acer\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\acer\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport React, { Component } from \"react\";\nimport HeaderMarket from './headerMarket';\nimport \"./deposit.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Container, Form, InputGroup } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport dai from \"../dai.svg\";\nimport { Tab, Tabs, Row } from 'react-bootstrap';\nimport Web3 from 'web3';\nimport iuhBank from '../abis/iuhBank.json';\nimport IuhCoin from '../abis/iuhCoin.json';\nimport Oracle from '../abis/Oracle.json';\nimport GetEther from \"./getEther\";\n\nvar EtherDeposit = /*#__PURE__*/function (_Component) {\n  _inherits(EtherDeposit, _Component);\n\n  var _super = _createSuper(EtherDeposit);\n\n  _createClass(EtherDeposit, [{\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n        var web3, netId, accounts, balance, iuhCoin, IuhBank, iuhBankAddress;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(typeof window.ethereum !== 'undefined')) {\n                  _context.next = 19;\n                  break;\n                }\n\n                web3 = new Web3(window.ethereum);\n                _context.next = 4;\n                return web3.eth.net.getId();\n\n              case 4:\n                netId = _context.sent;\n                _context.next = 7;\n                return web3.eth.getAccounts();\n\n              case 7:\n                accounts = _context.sent;\n\n                if (!(typeof accounts[0] !== 'undefined')) {\n                  _context.next = 15;\n                  break;\n                }\n\n                _context.next = 11;\n                return web3.eth.getBalance(accounts[0]);\n\n              case 11:\n                balance = _context.sent;\n                this.setState({\n                  account: accounts[0],\n                  balance: balance / Math.pow(10, 18),\n                  web3: web3\n                });\n                _context.next = 16;\n                break;\n\n              case 15:\n                window.alert('Please login with MetaMask');\n\n              case 16:\n                try {\n                  iuhCoin = new web3.eth.Contract(IuhCoin.abi, IuhCoin.networks[netId].address);\n                  IuhBank = new web3.eth.Contract(iuhBank.abi, iuhBank.networks[netId].address);\n                  iuhBankAddress = iuhBank.networks[netId].address;\n                  this.state.connect = true;\n                } catch (e) {\n                  console.log(e);\n                  window.alert('Contracts not deployed to the current network');\n                }\n\n                _context.next = 20;\n                break;\n\n              case 19:\n                window.alert('Please install MetaMask');\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadBlockchainData(_x) {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function EtherDeposit(props) {\n    var _this;\n\n    _classCallCheck(this, EtherDeposit);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      web3: null,\n      iuhBank: null,\n      token: null,\n      iuhBankAddress: null,\n      account: null,\n      balance: 0,\n      amount: 0,\n      connect: false\n    };\n    return _this;\n  }\n\n  _createClass(EtherDeposit, [{\n    key: \"depositAmount\",\n    value: function () {\n      var _depositAmount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(amount) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.state.amount = amount * Math.pow(10, 18);\n                this.state.connect = true;\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function depositAmount(_x2) {\n        return _depositAmount.apply(this, arguments);\n      }\n\n      return depositAmount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }]);\n\n  return EtherDeposit;\n}(Component);\n\nexport { EtherDeposit as default };","map":{"version":3,"sources":["C:/Users/acer/client/src/components/EtherDeposit.js"],"names":["React","Component","HeaderMarket","Container","Form","InputGroup","Button","Tab","Tabs","Row","Web3","iuhBank","IuhCoin","Oracle","GetEther","EtherDeposit","dispatch","window","ethereum","web3","eth","net","getId","netId","getAccounts","accounts","getBalance","balance","setState","account","alert","iuhCoin","Contract","abi","networks","address","IuhBank","iuhBankAddress","state","connect","e","console","log","props","token","amount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport HeaderMarket from './headerMarket';\r\nimport \"./deposit.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {Container,Form, InputGroup } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport dai from \"../dai.svg\";\r\nimport {Tab, Tabs, Row} from 'react-bootstrap';\r\nimport Web3 from 'web3';\r\nimport iuhBank from '../abis/iuhBank.json';\r\nimport IuhCoin from '../abis/iuhCoin.json';\r\nimport Oracle from '../abis/Oracle.json';\r\nimport GetEther from \"./getEther\";\r\nexport default class EtherDeposit extends Component{\r\n    async loadBlockchainData(dispatch) {\r\n        if(typeof window.ethereum !== 'undefined'){\r\n        const web3 = new Web3(window.ethereum)\r\n        const netId = await web3.eth.net.getId()\r\n        const accounts = await web3.eth.getAccounts()\r\n        if(typeof accounts[0] !== 'undefined'){\r\n            const balance = await web3.eth.getBalance(accounts[0])\r\n            this.setState({account: accounts[0], balance: balance / 10 **18, web3: web3})\r\n        } else {\r\n            window.alert('Please login with MetaMask')\r\n        }\r\n        try {\r\n            const iuhCoin = new web3.eth.Contract(IuhCoin.abi, IuhCoin.networks[netId].address)\r\n            const IuhBank = new web3.eth.Contract(iuhBank.abi, iuhBank.networks[netId].address)\r\n            const iuhBankAddress = iuhBank.networks[netId].address;\r\n            \r\n            this.state.connect = true;\r\n        } catch (e) {\r\n                console.log(e)\r\n                window.alert('Contracts not deployed to the current network')\r\n            }\r\n        } else {\r\n        window.alert('Please install MetaMask')\r\n        }\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            web3: null,\r\n            iuhBank: null, \r\n            token: null,\r\n            iuhBankAddress: null,\r\n            account: null,\r\n            balance: 0,\r\n            amount: 0,\r\n            connect: false\r\n        }\r\n    }\r\n    async depositAmount(amount){\r\n        this.state.amount = amount * 10 ** 18;\r\n        this.state.connect = true;\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                \r\n            </>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}