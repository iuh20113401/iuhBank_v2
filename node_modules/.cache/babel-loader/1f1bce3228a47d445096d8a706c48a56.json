{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\acer\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\acer\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\acer\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\acer\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\acer\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\acer\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\acer\\\\client\\\\src\\\\components\\\\market.js\";\nimport React, { Component } from \"react\";\nimport HeaderMarket from './headerMarket';\nimport \"./dashboard.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Container } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { FaChartPie, FaLongArrowAltDown, FaLongArrowAltUp } from \"react-icons/fa\";\nimport Web3 from 'web3';\nimport iuhBank from '../abis/iuhBank.json';\nimport IuhCoin from '../abis/iuhCoin.json';\nimport Oracle from '../abis/Oracle.json';\nimport dai from \"../dai.svg\";\n\nvar Dashboard = /*#__PURE__*/function (_Component) {\n  _inherits(Dashboard, _Component);\n\n  var _super = _createSuper(Dashboard);\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.loadBlockchainData(this.dispatch);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n        var web3, netId, accounts, balance, iuhCoin, IuhBank, iuhBankAddress;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(typeof window.ethereum !== 'undefined')) {\n                  _context2.next = 31;\n                  break;\n                }\n\n                web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return web3.eth.net.getId();\n\n              case 4:\n                netId = _context2.sent;\n                _context2.next = 7;\n                return web3.eth.getAccounts();\n\n              case 7:\n                accounts = _context2.sent;\n\n                if (!(typeof accounts[0] !== 'undefined')) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                _context2.next = 11;\n                return web3.eth.getBalance(accounts[0]);\n\n              case 11:\n                balance = _context2.sent;\n                this.setState({\n                  account: accounts[0],\n                  balance: balance / Math.pow(10, 18),\n                  web3: web3\n                });\n                _context2.next = 16;\n                break;\n\n              case 15:\n                window.alert('Please login with MetaMask');\n\n              case 16:\n                _context2.prev = 16;\n                iuhCoin = new web3.eth.Contract(IuhCoin.abi, IuhCoin.networks[netId].address);\n                IuhBank = new web3.eth.Contract(iuhBank.abi, iuhBank.networks[netId].address);\n                iuhBankAddress = iuhBank.networks[netId].address;\n                this.setState({\n                  token: iuhCoin,\n                  iuhBank: IuhBank,\n                  iuhBankAddress: iuhBankAddress\n                });\n                _context2.next = 23;\n                return this.getInfo();\n\n              case 23:\n                _context2.next = 29;\n                break;\n\n              case 25:\n                _context2.prev = 25;\n                _context2.t0 = _context2[\"catch\"](16);\n                console.log(_context2.t0);\n                window.alert('Contracts not deployed to the current network');\n\n              case 29:\n                _context2.next = 32;\n                break;\n\n              case 31:\n                window.alert('Please install MetaMask');\n\n              case 32:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[16, 25]]);\n      }));\n\n      function loadBlockchainData(_x) {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"getInfo\",\n    value: function () {\n      var _getInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var etherPool, iuhCoinPool, etherTotal, iuhCoinTotal, etherTotalBorrow, iuhCoinTotalBorrow, totalMarket, totalSupply, totalBorrow;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.state.iuhBank.methods.getEtherPoolInfo().call({\n                  from: this.state.account\n                });\n\n              case 2:\n                etherPool = _context3.sent;\n                _context3.next = 5;\n                return this.state.iuhBank.methods.getIuhCoinPoolInfo().call({\n                  from: this.state.account\n                });\n\n              case 5:\n                iuhCoinPool = _context3.sent;\n                etherTotal = etherPool['totalAmountInUsd'] / Math.pow(10, 18);\n                iuhCoinTotal = etherPool['totalAmountInUsd'] / Math.pow(10, 18);\n                etherTotalBorrow = etherPool['borrowAmountInUsd'] / Math.pow(10, 18);\n                iuhCoinTotalBorrow = etherPool['borrowAmountInUsd'] / Math.pow(10, 18);\n                totalMarket = etherTotal + iuhCoinTotal + etherTotalBorrow + iuhCoinTotalBorrow;\n                totalSupply = etherTotal + iuhCoinTotal;\n                totalBorrow = etherTotalBorrow + iuhCoinTotalBorrow;\n                this.setState({\n                  etherPool: etherPool,\n                  iuhCoinPool: iuhCoinPool,\n                  etherTotal: etherTotal,\n                  iuhCoinTotal: iuhCoinTotal,\n                  etherTotalBorrow: etherTotalBorrow,\n                  iuhCoinTotalBorrow: iuhCoinTotalBorrow,\n                  totalMarket: totalMarket,\n                  totalSupply: totalSupply,\n                  totalBorrow: totalBorrow,\n                  connect: true\n                });\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getInfo() {\n        return _getInfo.apply(this, arguments);\n      }\n\n      return getInfo;\n    }()\n  }]);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      web3: null,\n      iuhBank: null,\n      token: null,\n      iuhBankAddress: null,\n      account: null,\n      etherPool: null,\n      iuhCoinPool: null,\n      etherTotal: null,\n      iuhCoinTotal: null,\n      etherTotalBorrow: null,\n      iuhCoinTotalBorrow: null,\n      totalBorrow: null,\n      totalSupply: null,\n      totalMarket: null,\n      connect: false\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.etherPool);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderMarket, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 18\n        }\n      }));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport { Dashboard as default };","map":{"version":3,"sources":["C:/Users/acer/client/src/components/market.js"],"names":["React","Component","HeaderMarket","Container","Button","FaChartPie","FaLongArrowAltDown","FaLongArrowAltUp","Web3","iuhBank","IuhCoin","Oracle","Dashboard","loadBlockchainData","dispatch","window","ethereum","web3","eth","net","getId","netId","getAccounts","accounts","getBalance","balance","setState","account","alert","iuhCoin","Contract","abi","networks","address","IuhBank","iuhBankAddress","token","getInfo","console","log","state","methods","getEtherPoolInfo","call","from","etherPool","getIuhCoinPoolInfo","iuhCoinPool","etherTotal","iuhCoinTotal","etherTotalBorrow","iuhCoinTotalBorrow","totalMarket","totalSupply","totalBorrow","connect","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport HeaderMarket from './headerMarket';\r\nimport \"./dashboard.css\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {Container} from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FaChartPie,FaLongArrowAltDown,FaLongArrowAltUp } from \"react-icons/fa\";\r\nimport Web3 from 'web3';\r\nimport iuhBank from '../abis/iuhBank.json';\r\nimport IuhCoin from '../abis/iuhCoin.json';\r\nimport Oracle from '../abis/Oracle.json';\r\nimport dai from \"../dai.svg\";\r\n\r\nexport default class Dashboard extends Component{\r\n\r\n    async componentDidMount() {\r\n        this.loadBlockchainData(this.dispatch);    \r\n    }\r\n    async loadBlockchainData(dispatch) {\r\n        if(typeof window.ethereum !== 'undefined'){\r\n        const web3 = new Web3(window.ethereum)\r\n        const netId = await web3.eth.net.getId()\r\n        const accounts = await web3.eth.getAccounts()\r\n        if(typeof accounts[0] !== 'undefined'){\r\n            const balance = await web3.eth.getBalance(accounts[0])\r\n            this.setState({account: accounts[0], balance: balance / 10 **18, web3: web3})\r\n        } else {\r\n            window.alert('Please login with MetaMask')\r\n        }\r\n        try {\r\n            const iuhCoin = new web3.eth.Contract(IuhCoin.abi, IuhCoin.networks[netId].address)\r\n            const IuhBank = new web3.eth.Contract(iuhBank.abi, iuhBank.networks[netId].address)\r\n            const iuhBankAddress = iuhBank.networks[netId].address;\r\n            this.setState({token: iuhCoin, iuhBank: IuhBank, iuhBankAddress: iuhBankAddress})\r\n            await this.getInfo();\r\n        } catch (e) {\r\n                console.log(e)\r\n                window.alert('Contracts not deployed to the current network')\r\n            }\r\n        } else {\r\n        window.alert('Please install MetaMask')\r\n        }\r\n    }\r\n    async getInfo(){\r\n        let etherPool = await this.state.iuhBank.methods.getEtherPoolInfo().call({from: this.state.account});\r\n        let iuhCoinPool = await this.state.iuhBank.methods.getIuhCoinPoolInfo().call({from: this.state.account});\r\n        let etherTotal = etherPool['totalAmountInUsd'] / 10 ** 18;\r\n        let iuhCoinTotal = etherPool['totalAmountInUsd']/ 10 ** 18;\r\n        let etherTotalBorrow = etherPool['borrowAmountInUsd']/ 10 ** 18;\r\n        let iuhCoinTotalBorrow = etherPool['borrowAmountInUsd'] / 10 ** 18;\r\n        let totalMarket = etherTotal + iuhCoinTotal +  etherTotalBorrow + iuhCoinTotalBorrow;\r\n        let totalSupply = etherTotal + iuhCoinTotal;\r\n        let totalBorrow = etherTotalBorrow + iuhCoinTotalBorrow;\r\n        this.setState({etherPool: etherPool, iuhCoinPool: iuhCoinPool, etherTotal:etherTotal,iuhCoinTotal:iuhCoinTotal,etherTotalBorrow:etherTotalBorrow, iuhCoinTotalBorrow:iuhCoinTotalBorrow, totalMarket:totalMarket, totalSupply:totalSupply,totalBorrow:totalBorrow,connect: true})\r\n    }\r\n     constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            web3: null,\r\n            iuhBank: null, \r\n            token: null,\r\n            iuhBankAddress: null,\r\n            account: null,\r\n            etherPool: null,\r\n            iuhCoinPool: null,\r\n            etherTotal: null,\r\n            iuhCoinTotal: null,\r\n            etherTotalBorrow: null,\r\n            iuhCoinTotalBorrow: null,\r\n            totalBorrow: null,\r\n            totalSupply: null,\r\n            totalMarket: null,\r\n            connect: false\r\n        }\r\n    }\r\n    render(){\r\n        console.log(this.state.etherPool)\r\n        return(\r\n            <>\r\n                {<HeaderMarket/>}\r\n                \r\n            </>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}